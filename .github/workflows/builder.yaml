name: Builder

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-latest
    name: 📝 Lint repository files
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: ✅ Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore: rootfs

      - name: ✨ Run JQ
        run: |
          shopt -s globstar
          cat **/*.json | jq '.'

  base-os:
    name: 🔨 Build ${{ matrix.tag }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "alpine/base"
          - "debian/base"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  base-os-s6:
    name: 🔨 Build ${{ matrix.tag }}
    needs: base-os
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "alpine-s6/base"
          - "debian-s6/base"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  base-runtime:
    name: 🔨 Build ${{ matrix.tag }}
    needs: base-os
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "alpine/node"
          - "alpine/python"
          - "debian/node"
          - "debian/python"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  base-runtime-s6:
    name: 🔨 Build ${{ matrix.tag }}
    needs: base-runtime
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "alpine-s6/node"
          - "alpine-s6/python"
          - "debian-s6/node"
          - "debian-s6/python"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  devcontainer:
    name:  🔨 Build ${{ matrix.tag }}
    needs: base-runtime
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "devcontainer/frontend"
          - "devcontainer/integration"
          - "devcontainer/node"
          - "devcontainer/python"
    steps:
      - name: 📦 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  lastrun:
    name:  🔨 Build ${{ matrix.tag }}
    needs: devcontainer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "devcontainer/generic"
    steps:
      - name: 📦 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        if: github.event_name != 'release'
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            should_build=true
          else
            should_build=$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")
          fi
          echo "::set-output name=build::$should_build"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: |
          if [[ "${{ github.event_name }}" == "release" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "::set-output name=publish::true"
          else
            echo "::set-output name=publish::false"
          fi

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: |
          declare -a args
          if [ "${{ steps.should_publish.outputs.publish }}" == "true" ]; then
            args+=(" --push ")
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            args+=(" --tag stable ")
            args+=(" --tag $(echo ${{ github.ref }} | awk -F"/" '{print $NF}' ) ")
          fi
          echo "${args[@]}"
          echo "::set-output name=arguments::${args[@]}"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}