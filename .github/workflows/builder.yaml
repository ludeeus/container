name: Builder

on:
  pull_request:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    name: 📝 Lint repository files
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: ✅ Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore: rootfs

      - name: ✨ Run JQ
        run: |
          shopt -s globstar
          cat **/*.json | jq '.'

  base:
    name: 🧱 Build ${{ matrix.tag }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "base/debian"
          - "base/debian-s6"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: echo "::set-output name=build::$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=publish::false"

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=arguments::"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  container:
    name: 🚢 Build ${{ matrix.tag }}
    needs: base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "container/python-debian"
          - "container/python-debian-s6"
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: echo "::set-output name=build::$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=publish::false"

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=arguments::"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}

  devcontainer:
    name:  🖥️ Build ${{ matrix.tag }}
    needs: base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - "devcontainer/python"
          - "devcontainer/integration"
    steps:
      - name: 📦 Checkout the repository
        uses: actions/checkout@v2

      - name: 📃 Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: ❓ Should build ${{ matrix.tag }}?
        id: should_build
        run: echo "::set-output name=build::$(bash ./scripts/should_build.sh "${{ matrix.tag }}" "${{ steps.changed_files.outputs.all }}")"

      - name: ❔ Should publish ${{ matrix.tag }}?
        id: should_publish
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=publish::false"

      - name: ➕ Additional arguments
        id: arguments
        if: steps.should_build.outputs.build == 'true'
        run: echo "::set-output name=arguments::"

      - name: 🔓 Registry login
        if: steps.should_publish.outputs.publish == 'true'
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: 🛠️ Build ${{ matrix.tag }}
        if: steps.should_build.outputs.build == 'true'
        run: bash ./scripts/build.sh --container ${{ matrix.tag }} ${{ steps.arguments.outputs.arguments }}
